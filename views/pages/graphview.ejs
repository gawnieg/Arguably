<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <% include ../partials/head %>
  <!-- <script src="http://d3js.org/d3.v2.min.js?2.9.3"></script> -->
<style>

  .link {
        stroke: #aaa;
        }

  .node text {
        stroke:#333;
        cursos:pointer;
        }

  .node circle{
        stroke:#fff;
        stroke-width:3px;
        fill:#555;
        }
</style>
</head>
<body>
  <header>
      <% include ../partials/header %>
  </header>

<script>

    // var oNodes = output.nodes
    // var oLinks = output.links
    var width = 1500,
        height = 1000;

    console.log(<%- output.nodes %>)

    var svg = d3.select("body").append("svg")
        .attr("width", width)
        .attr("height", height);

    var force = d3.layout.force()
        .gravity(.05)
        .distance(100)
        .charge(-100)
        .size([width, height]);

    // d3.json("Data/graphabledata.json", function(json) {
        force.nodes(<%- output.nodes %>)
        .links(<%- output.links %>)
        .start();

    var link = svg.selectAll(".link")
              .data(<%- output.links %>)
              .enter().append("line")
              .attr("class", "link")
              .style("stroke-width", function(d) { return Math.sqrt(d.weight); });

    var node = svg.selectAll(".node")
              .data(<%- output.nodes %>)
              .enter().append("g")
              .attr("class", "node")
              .call(force.drag)
              .on("mouseover", showText)
              .on("mouseout", removeText);

    node.append("circle")
        .attr("r","5");


    function showText(d, i) {
            d3.select(this).append("text")
                       .attr("dx",12)
                       .attr("dy", ".35em")
                       .text(function(d){return d.name});
      }

    function removeText(d, i) {
            d3.select(this).select("text").remove()
     }
  force.on("tick", function() {
    link.attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });

    node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
  }); %>
// });
  </script>
</body>
</html>
